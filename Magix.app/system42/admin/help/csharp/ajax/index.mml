
<h2>ajax - mux</h2>

<p>magix contains an ajax library which is called mux. mux is as acronym, and means magix user experience. mux is built 
around a concept called managed ajax, which is in most regards far superior to for instance asp.net ajax. first of 
all, the syntax is the same syntax as the asp.net postback web controls, which means it's easier to learn and use 
than asp.net ajax. secondly, mux uses far less bandwith than asp.net ajax in its requests to the server, since 
asp.net ajax is largely reliant upon partial rendering, where mux is largely not dependent upon this. thirdly, 
the javascript library files for mux, is a fraction of the size of the javascript files for asp.net ajax. though 
the most important feature of mux, is that javascript knowledge is optional! you do not need to know anything 
about javascript to create very rich and advanced ajax applications with mux!</p>

<p>if you compare mux with other ajax libraries, such as jquery, telerik and such, you will find that mux 
scores better than all of these libraries in regards to most parameters. with mux, ajax just happens!</p>

<p>if you're used to using web controls from asp.net, then mux should be very familiar to you. in fact the 
only difference is that instead of using &lt;asp: you use &lt;mux: when declaring your web controls. and in the 
codebehind of your aspx and ascx file, you will be using the Magix.UX namespace instead of System.Web.UI 
namespace. besides from that, the api is the same, except for of course, that mux has support for many things 
that the conventional web control libraries does not have</p>

<p>below is an example of an active module, using mux instead of conventional web controls. remember to embed 
the active module as an embedded resource if you want to compile this sample</p>

<label>SampleModule.ascx</label>
<pre>
&lt;%@ Assembly 
    Name="Magix.sample" %&gt;
&lt;%@ Control 
    Language="C#" 
    AutoEventWireup="true" 
    Inherits="Magix.sample.SampleModule" %&gt;

&lt;mux:Button
    runat="server"
    id="btn"
    OnClick="btn_Click"
    Value="Click Me!"
    Class="span-3 btn-large"/&gt;

&lt;mux:Label
    runat="server"
    id="lbl"
    Value="to be changed ..."
    OnMouseOver="lbl_MouseOver"
    Class="span-5"/&gt;
</pre>

<label>SampleModule.ascx.cs</label>
<pre>
using System;
using System.Web;
using System.Web.UI;
using Magix.Core;
using Magix.UX.Widgets;

namespace Magix.sample
{
    public class SampleModule : ActiveModule
    {
        protected Button btn;
        protected Label lbl;

        protected void btn_Click(object sender, EventArgs e)
        {
            lbl.Value ="label text was changed!";
        }

        protected void lbl_MouseOver(object sender, EventArgs e)
        {
            lbl.Value ="DON'T TOUCH ME!!! OUCH!";
        }
    }
}</pre>

<p>with the conventional asp.net web controls, you can mostly handle the click events and such on the server. with 
mux, you can virtually handle all dom events that exists, in event handlers on the server, from where you can 
modify all other mux controls as you wish, in ajax callbacks. this facilitates for a much cleaner architecture for 
your solutions, where all the business logic ends up on the server, and doesn't end up leaking out into the 
client environment in your browser environment</p>

<p>you will find most controls you need in the Magix.UX namespace from the Magix.UX project. however, below 
is an exhaustive list</p>

<ul class="list-no-type">
<li>{{
link-button=>magix-ux-button
  value=>Button
  css=>span-3 clear
  onclick
    magix.help.open-file
      file=>system42\admin\help\csharp\ajax\controls\button.mml
}} <span class="span-18 last">a button type of control</span></li>
<li>{{
link-button=>magix-ux-checkbox
  value=>CheckBox
  css=>span-3 clear
  onclick
    magix.help.open-file
      file=>system42\admin\help\csharp\ajax\controls\checkbox.mml
}} <span class="span-18 last">a two state check box control, useful for yes or no questions</span></li>
<li>{{
link-button=>magix-ux-hiddenfield
  value=>Hidden
  css=>span-3 clear
  onclick
    magix.help.open-file
      file=>system42\admin\help\csharp\ajax\controls\hiddenfield.mml
}} <span class="span-18 last">a hidden value control.&nbsp;&nbsp;not visible for the user, but can carry any text string you wish</span></li>
<li>{{
link-button=>magix-ux-hyperlink
  value=>Link
  css=>span-3 clear
  onclick
    magix.help.open-file
      file=>system42\admin\help\csharp\ajax\controls\hyperlink.mml
}} <span class="span-18 last">a hyperlink, leading to another url</span></li>
<li>{{
link-button=>magix-ux-image
  value=>Img
  css=>span-3 clear
  onclick
    magix.help.open-file
      file=>system42\admin\help\csharp\ajax\controls\image.mml
}} <span class="span-18 last">shows an image on the page</span></li>
<li>{{
link-button=>magix-ux-label
  value=>Label
  css=>span-3 clear
  onclick
    magix.help.open-file
      file=>system42\admin\help\csharp\ajax\controls\label.mml
}} <span class="span-18 last">a control for text strings, which doesn't necessarily have any rich formatting, or doesn't require the user to interact with them</span></li>
<li>{{
link-button=>magix-ux-linkbutton
  value=>LinkButton
  css=>span-3 clear
  onclick
    magix.help.open-file
      file=>system42\admin\help\csharp\ajax\controls\linkbutton.mml
}} <span class="span-18 last">a button type of control, but rendered and recognized as a hyperlink by the browser</span></li>
<li>{{
link-button=>magix-ux-panel
  value=>Panel
  css=>span-3 clear
  onclick
    magix.help.open-file
      file=>system42\admin\help\csharp\ajax\controls\panel.mml
}} <span class="span-18 last">a web control for wrapping other controls within.&nbsp;&nbsp;a container web control for other web controls and controls</span></li>
<li>{{
link-button=>magix-ux-radiobutton
  value=>Radio
  css=>span-3 clear
  onclick
    magix.help.open-file
      file=>system42\admin\help\csharp\ajax\controls\radiobutton.mml
}} <span class="span-18 last">a two state button type of control, like the checkbox, except multiple radio buttons can be grouped together, allowing 
for the end user to choose only one value.&nbsp;&nbsp;handy for choose one item, from a list of different alternatives types 
of questions</span></li>
<li>{{
link-button=>magix-ux-selectlist
  value=>Select
  css=>span-3 clear
  onclick
    magix.help.open-file
      file=>system42\admin\help\csharp\ajax\controls\selectlist.mml
}} <span class="span-18 last">almost the same as radio buttons, except that this one takes significantly less amount of space, since 
its default state, is to be shown as a drop-down list of different values, where only one value can be chosen</span></li>
<li>{{
link-button=>magix-ux-textarea
  value=>TextArea
  css=>span-3 clear
  onclick
    magix.help.open-file
      file=>system42\admin\help\csharp\ajax\controls\textarea.mml
}} <span class="span-18 last">multiple lines of text, almost like the TextBox, except that the TextArea control allows for multiple lines 
of text input</span></li>
<li>{{
link-button=>magix-ux-textbox
  value=>TextBox
  css=>span-3 clear
  onclick
    magix.help.open-file
      file=>system42\admin\help\csharp\ajax\controls\textbox.mml
}} <span class="span-18 last">single line text input web control.&nbsp;&nbsp;allows the end user to type in single lines of textually based input 
supports different modes, such as password mode, numeric mode, email mode, etc </span></li>
<li>{{
link-button=>magix-ux-dynamicpanel
  value=>DynamicPanel
  css=>span-3 clear
  onclick
    magix.help.open-file
      file=>system42\admin\help\csharp\ajax\controls\dynamicpanel.mml
}} <span class="span-18 last">control for dynamically loading up other types of controls and active modules.&nbsp;&nbsp;
almost like the Panel, except the DynamicPanel keeps its state, and remembers 
which controls it has previously loaded earlier across web requests.&nbsp;&nbsp;automatically reloads the same 
controls it loaded previously upon every callback and postback to page</span></li>
<li>{{
link-button=>magix-ux-timer
  value=>Timer
  css=>span-3 clear
  onclick
    magix.help.open-file
      file=>system42\admin\help\csharp\ajax\controls\timer.mml
}} <span class="span-18 last">a timer control, which allows for calling back into the web server, to 
periodically check for changes, every n'th millisecond</span></li>
<li>{{
link-button=>magix-ux-uploader
  value=>Uploader
  css=>span-3 clear
  onclick
    magix.help.open-file
      file=>system42\admin\help\csharp\ajax\controls\uploader.mml
}} <span class="span-18 last">allows for dragging and dropping files onto the browser area, to upload files to your server</span></li>
<li>{{
link-button=>magix-ux-wysiwyg
  value=>Wysiwyg
  css=>span-3 clear
  onclick
    magix.help.open-file
      file=>system42\admin\help\csharp\ajax\controls\wysiwyg.mml
}} <span class="span-18 last">allows for rich editing html through a what-you-see-is-what-you-get interface</span></li>
</ul>

{{
lambda=>next
  oncreatecontrols
    magix.help.set-next
      next=>system42\admin\help\csharp\ajax\controls\button.mml
}}

