

inspect=>@"creates unit tests for the [iterate] keyword

creates unit tests to test the [iterate] keyword of magix"


event
  name=>magix.test.iterate
  persist=>false
  inspect=>@"verifies [iterate] works

creates an [iterate] statement, concatenating all nodes into a result node, 
verifying the result is as expected"
  code
    _result
    _data=>begin-count:
      =>one, 
      =>two, 
        =>three, 
        =>four, 
          =>five, 
            =>six, 
        =>seven, 
      =>eight, 
        =>nine, 
      =>ten
        =>11-stop
    iterate=>[_data]
      if=>equals
        lhs=>[.].value
        rhs=>11-stop
        code
          stop
      set=>[/][_result].value
        value=>{0}{1}
          =>[/][_result].value
          =>[.].value
    if=>not-equals
      lhs=>[_result].value
      rhs=>begin-count:one, two, three, four, five, six, seven, eight, nine, ten
      code
        throw=>[iterate] misbehaved


event
  name=>magix.test.iterate-immutable
  persist=>false
  inspect=>@"verifies [iterate] is immutable

creates an [iterate] statement, iterating over two nodes, making sure the 
iterate code scope is immutable, and not changed from iteration to iteration"
  code
    _data
      =>
      =>
    iterate=>[_data]
      _data=>
      if=>not-equals
        lhs=>[@][_data].value
        rhs=>
        code
          throw=>[iterate] misbehaved
      set=>[@][_data].value
        value=>foo


event
  name=>magix.test.iterate-modify-collection
  persist=>false
  inspect=>@"verifies [iterate] can modify collection

creates an [iterate] statement, having the code of the iterate 
modify the collection it is iterating over"
  code
    _data
      d0=>howdy
      d1=>howdy
        d11=>howdy
          d111=>howdy
        d12=>howdy
      d2=>howdy
    iterate=>[_data]
      set=>[.]
    if=>not-equals
      lhs=>[_data].count
      rhs=>0
      code
        throw=>[iterate] misbehaved
    _data2
      d0=>howdy
      d1=>howdy2
        d11=>howdy
          d111=>howdy
        d12=>howdy
      d2=>howdy
    iterate=>[_data2]
      if=>equals
        lhs=>[.].value
        rhs=>howdy
        code
          set=>[.]
    if=>not-equals
      lhs=>[_data2].count
      rhs=>1
      or=>not-exist
        lhs=>[_data2][d1]
      or=>exist
        lhs=>[_data2][d11]
      code
        throw=>[iterate] misbehaved

