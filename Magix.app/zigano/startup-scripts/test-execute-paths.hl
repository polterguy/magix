


event=>magix.test.execute-path-1
  inspect=>@"checks to see if [execute] with path behaves correctly"
  code
    _in
      item1=>hello 1
      item2=>hello 2
      item3=>hello 3
    _exe
      for-each=>[_in]
        set=>[/][_out][[.].Name].Value
          value=>[.].Value
    execute=>[_exe]
    _out
    if=>[_out][1].Value!=hello 2
      throw=>@"[execute] didn't behave
correctly in magix.test.verify-execute-path-1


event=>magix.test.execute-path-with-internal-exception-handler
  inspect=>@"checks to see if [execute], with [try] and [throw] inside of itself behaves correctly"
  code
    _exe
      try
        code
          throw=>howdy
        catch
    execute=>[_exe]
    if=>[_exe][try][catch][exception].Value!=howdy
      throw=>@"magix.test.execute-path-with-internal-exception failed, 
wrong text of exception"


event=>magix.test.execute-path-with-external-exception-handler
  inspect=>@"checks to see if [execute] with [throw] is correctly catched outside of [execute] statement"
  code
    _exe
      throw=>howdy
    try
      code
        execute=>[/][_exe]
      catch
    if=>[try][catch][exception].Value!=howdy
      throw=>@"magix.test.execute-path-with-external-exception failed, 
wrong text of exception"




event=>magix.test.execute-with-whitelist-1
  inspect=>@"checks to see if [execute] with [whitelist] behaves correctly"
  code
    _exe
      if=>[_exe].Value
    execute=>[_exe]
      whitelist
        if



event=>magix.test.execute-with-empty-whitelist
  inspect=>@"checks to see if [execute] with empty [whitelist] correctly stops execution"
  code
    _exe
      if=>[_exe].Value
    try
      code
        execute=>[/][_exe]
          whitelist
        throw=>oops
      catch
        if=>[exception].Value==oops
          throw=>@â„¢magix.test.execute-with-empty-whitelist failed, 
empty whitelist allowed for executing [if]"






event=>magix.test.execute-with-max-cycles-allowed
  inspect=>@"checks to see if [execute] with [max-cycles] allows when supposed to"
  code
    _in
      item1=>hello 1
      item2=>hello 2
      item3=>hello 3
    _exe
      for-each=>[_in]
        add=>[/][_out]
          value=>[.]
    execute=>[_exe]
      max-cycles=>4
    _out




event=>magix.test.execute-with-max-cycles-exceeded
  inspect=>@"checks to see if [execute] with [max-cycles] stops execution when supposed to"
  code
    _in
      item1=>hello 1
      item2=>hello 2
      item3=>hello 3
    _exe
      for-each=>[/][_in]
        add=>[/][_out]
          value=>[.]
    _hadException
    try
      code
        execute=>[/][_exe]
          max-cycles=>3
      catch
        set=>[/][_hadException].Value
          value=(bool)>True
    if=>![_hadException].Value
      throw=>@"magix.test.execute-with-max-cycles-allowed 
did not throw an exception when max-cycles was passed"
    if=>[_out].Count!=2
      throw=>@"magix.test.execute-with-max-cycles-allowed 
didn't correctly change the node hierarchy"
    _out











