
<h2>nested expressions</h2>

<p>you can also nest expressions, such that a part of an expression, is an expression in itself.&nbsp;&nbsp;consider 
the following code</p>

<pre>
_data=>2
  v0=>wrong
  v1=>error
  v2=>right
  v3=>flawed
set=>[_result].Value
  value=>[_data][[_data].Value].Value
</pre>

<p>the above code will create the code result shown below</p>

<pre>
_data=>2
  v0=>wrong
  v1=>error
  v2=>right
  v3=>flawed
set=>[_result].Value
  value=>[_data][[_data].Value].Value
_result=>right
</pre>

<p>this is because the sub-expression [_data].Value will return the number "2".&nbsp;&nbsp;this again, will turn the outer expression 
into [_data][2].Value, resulting in the text string of "right".&nbsp;&nbsp;you can nest as many expressions as you wish, having expressions 
which are nested inside of other nested expressions, and so on</p>

<p>you can of course also nest multiple expressions like this, which you should be careful with, since this obviously will 
easily win you a gold medal in the world championship of obfuscated code</p>

{{
lambda=>next
  oncreatecontrols
    magix.help.set-next
      next=>system42/admin/help/hyper-lisp/expressions-returning-nodes.mml
}}
