

inspect=>@"creates unit tests to 
test the [magix.execute.add] keyword"


event
  name=>magix.test.add-with-value
  persist=>false
  inspect=>@"asserts that [add] works the 
way it should work, by trying to add a list
of nodes, pointed to by the [value] child
node"
  code
    _data1
      tmp=>testing
    _buffer
    add=>[_buffer]
      value=>[_data1]
    if=>not-equals
      lhs=>[_buffer][_data1][tmp].Value
      rhs=>testing
      code
        throw=>@"[add] didn't behave as expected 
when invoking with an expression in the [value] node"


event
  name=>magix.test.add-with-children
  persist=>false
  inspect=>@"asserts that [add] works the 
way it should work, by trying to add a list
of nodes, whom are children nodes of the 
[add] node"
  code
    _buffer
    add=>[_buffer]
      _data1
        tmp=>testing
    if=>not-equals
      lhs=>[_buffer][_data1][tmp].Value
      rhs=>testing
      code
        throw=>@"[add] didn't behave as expected 
when invoking with a list of child nodes"


event
  name=>magix.test.add-no-children
  persist=>false
  inspect=>@"asserts that [add] works the 
way it should work, by trying to add a list
of nodes, whom are pointed to by the [value] 
node, with the [children-only] set to true"
  code
    _data1
      tmp=>testing
    _buffer
    add=>[_buffer]
      value=>[_data1]
      children-only=>true
    if=>not-equals
      lhs=>[_buffer][tmp].Value
      rhs=>testing
      code
        throw=>@"[add] didn't behave as expected"


event
  name=>magix.test.add-named-node-with-value
  persist=>false
  inspect=>@"asserts that [add] works the 
way it should work"
  code
    _buffer
    add=>[_buffer]
      value=>tmp
        value=>testing
    if=>not-equals
      lhs=>[_buffer][tmp].Value
      rhs=>testing
      code
        throw=>@"[add] didn't behave as expected"


event
  name=>magix.test.add-named-node-without-value
  persist=>false
  inspect=>@"asserts that [add] works the 
way it should work"
  code
    _buffer
    add=>[_buffer]
      value=>tmp
    if=>exist
      lhs=>[_buffer][tmp].Value
      or=>not-exist
        lhs=>[_buffer][tmp]
      code
        throw=>@"[add] didn't behave as expected"

