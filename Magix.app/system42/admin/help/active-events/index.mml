

<h2 class="span-14 left-5 last">active events</h2>

<p>active events is a new design pattern, which entirely replaces every single design pattern by the 
gang of four, facilitating for the flexibility in magix</p>

<p>an active event can be declared in c# like below</p>

<pre>
[ActiveEvent(Name = "my-company.my-app.some-active-event")]
protected void my_company_my_app_some_active_event(object sender, ActiveEventArgs e)
{
	/* do some c# logic here */
}
</pre>

<p>the above method could be put into any active controller or active module, and it would 
execute everytime the "my-company.my-app.some-active-event" active event was raised</p>

<p>an active event can be raised with the c# code below</p>

<pre>
// these are the parameters passed into our active event
Node parameters = new Node();

ActiveEvents.Instance.RaiseActiveEvent(
	this /* or whatever object is responsible for raising the active event */,
	"my-company.my-app.some-active-event",
	parameters);
</pre>

<p>active events can also be declared as static methods, to understand the difference, you must read up on 
magix mvc, which is a later subject</p>

{{
lambda=>next
  oncreatecontrols
    magix.help.set-next
      next=>system42/admin/help/active-events/hello-world-csharp.mml
}}

