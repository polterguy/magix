

inspect=>@"contains the menu parts of email client

contains the menu parts events definition file of the 
magix mail application"


// inbox link was clicked, making sure we show all emails in inbox
magix.email.inbox-clicked
  execute-script
    file=>your-files/system-apps/magix-mail/components/inbox/show-emails.hl


// invoked when settings link is clicked.  show settings form, and make sure inbox is shown after settings is canceled or saved
magix.email.settings-clicked
  execute-script
    file=>your-files/system-apps/magix-mail/components/user-setup/setup-settings.hl
    params
      extra-buttons
        button=>cancel
          class=>span-2
          value=>cancel
          onclick
            execute-script
              file=>your-files/system-apps/magix-mail/components/menu/create-menu.hl
            execute-script
              file=>your-files/system-apps/magix-mail/components/inbox/show-emails.hl
      execute-afterwards
        execute-script
          file=>your-files/system-apps/magix-mail/components/menu/create-menu.hl
        execute-script
          file=>your-files/system-apps/magix-mail/components/inbox/show-emails.hl


// checks for new emails towards pop3 server, and shows error if an error have occurred
magix.email.check-for-new-emails

  // running script that checks for new emails
  execute-script
    file=>your-files/system-apps/magix-mail/components/workers/pop3/check-for-new-emails.hl

  switch=>[execute-script][params][status].value

    case=>fetching

      // email retriever is still fetching emails from pop3 server
      if=>exist
        lhs=>[execute-script][params][server-count]
        code
          set=>[@][..][..][magix.email.update-unread-email-count][server-count].value
            value=>[execute-script][params][server-count].value
      if=>exist
        lhs=>[execute-script][params][download-count]
        code
          set=>[@][..][..][magix.email.update-unread-email-count][download-count].value
            value=>[execute-script][params][download-count].value
      magix.email.update-unread-email-count

      // shoving visual clues to user that emails are being fetched
      magix.email.show-visual-clue-fetching-emails
        show-clue=>true

    case=>finished

      // some thread has just finished downloading new messages
      if=>exist
        lhs=>[execute-script][params][download-count]
        code
          set=>[@][..][..][magix.email.new-messages-downloaded][download-count].value
            value=>[execute-script][params][download-count].value
      magix.email.new-messages-downloaded

      // removing visual clues for that we're currently fetching emails
      magix.email.show-visual-clue-fetching-emails
        show-clue=>false

    case=>error

      // last retrieval operation went bad, showing error message box back to user
      using=>magix.viewport
        show-message
          message=>@"something went wrong when trying to download messages from pop3 server, message from server was; '{0}'"
            =>[execute-script][params][error].value
          time=>10000
          color=>#ffaaaa

      // removing visual clues for that we're currently fetching emails
      magix.email.show-visual-clue-fetching-emails
        show-clue=>false

    default

      // a new thread was probably spawned to check for emails towards server.  do nothing ...


// invoked when new messages have arrived
magix.email.new-messages-downloaded
  magix.viewport.show-message
    message=>new messages have been downloaded
    color=>#aaffaa


// updates number of new emails visual clues to user, expects [server-count] and [download-count]
magix.email.update-unread-email-count


// changes visual clues on inbox link to indicate whether or not we're fetching emails or not
magix.email.show-visual-clue-fetching-emails

  magix.forms.get-class
    form-id=>inbox
    id=>inbox-link

  // checking to see if we're supposed to show visual clues or hide them
  if=>equals
    lhs=>[$][show-clue].value
    rhs=>true
    code

      // we're supposed to show visual clues.  but first we must check to see if visual clues already are visible
      index-of=>[magix.forms.get-class][value].value
        what=>animate-visual-clue

      if=>not-exist
        lhs=>[@][index-of][result]
        code

          // css class giving visual clues that we're fetching emails is not on, therefor we turn it on
          using=>magix.forms
            set-title
              form-id=>inbox
              id=>inbox-link
              value=>fetching emails from your email server
            set-class
              form-id=>inbox
              id=>inbox-link
              value=>{0} animate-visual-clue
                =>[magix.forms.get-class][value].value
  else

    // we're supposed to remove visual clues.  but first we must check to see if visual clues are on or off
    index-of=>[magix.forms.get-class][value].value
      what=>animate-visual-clue

    if=>exist
      lhs=>[@][index-of][result]
      code

        // css class giving visual clues that we're fetching emails is on, therefor we turn it off
        replace=>[magix.forms.get-class][value].value
          what=>@" animate-visual-clue"
        using=>magix.forms
          set-title
            form-id=>inbox
            id=>inbox-link
          set-class
            form-id=>inbox
            id=>inbox-link
            value=>[magix.forms.get-class][value].value

