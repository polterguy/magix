

<h2 class="span-14 left-5 last">web parts</h2>

<p>web parts in magix are small html and web-control building blocks, you can dynamically create, and inject into containers on your viewport</p>

<p>web parts can either be created using hyper lisp or magix markup language.&nbsp;&nbsp;
there are three important active events when it comes to web parts</p>

<ul>
<li>magix.forms.create-web-part - creates a web part from hyper lisp web controls</li>
<li>magix.forms.load-mml-web-part - creates a web part from a magix markup file, mml file</li>
<li>magix.forms.create-mml-web-part - creates a web part from a string of magix markup language</li>
</ul>

<p>by using the above active events, you can combine and mix server-side web controls with html5, as you see fit.&nbsp;&nbsp;
the entire back-en administration system in magix is built using web parts, including these help files</p>

<p>when you are creating web parts, you can interm√≠x all the ajax web controls from mux with html, and such create 
any types of combination of server side web controls and static html you wish.&nbsp;&nbsp;from event handlers of these 
web controls, you can invoke any active event, either the ones you create, or any of the existing ones in magix.&nbsp;&nbsp;
and by combining web parts with hyper lisp, you can solve most of your problems without having to write c# code.&nbsp;&nbsp;
mostly anything you can do in asp.net, can also be done using web parts</p>

<p>you can create web parts visually, in a wysiwyg interface, by using the forms link on the magix desktop</p>

<p>to understand web parts, a basic understanding of html and hyper lisp is to your advantage</p>

{{
lambda=>next
  oncreatecontrols
    magix.help.set-next
      next=>system42/admin/help/active-events/hello-world-csharp.mml
}}

