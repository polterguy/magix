
<h2>hyper lisp magix.execute</h2>

<p>the [magix.execute] active event, is where all the magic happens.&nbsp;&nbsp;this is the core active event of hyper lisp as a 
programming language, and everything that happens, starts out here.&nbsp;&nbsp;like everything else in hyper lisp, the language in 
itself is actually nothing but an active event.&nbsp;&nbsp;if you'd like to see what this active event actually does, you'll find 
it in the Magix.execute project, in the ExecuteCore.cs file</p>

<p>as previously mentioned, the hyper lisp syntax changes from server installation to server installation.&nbsp;&nbsp;this is because 
every single keyword, as actually just a wrapper around all active events that starts with the namespace <em>"magix.execute"</em>,&nbsp;&nbsp;
this means that every single active event that starts with the string "magix.execute" will automatically become an extension of the 
programming language itself.&nbsp;&nbsp;consider the following code</p>

<pre>
event=>magix.execute.add-two-numbers
  code
    using=>magix.math
      add
        =>[$][_ip].Value[0].Value
        =>[$][_ip].Value[1].Value
    set=>[$][_ip].Value[result].Value
      value=>[using][add].Value
</pre>

<p>the above code actually modifies the programming language itself, and creates a new keyword, which is called [add-two-numbers].&nbsp;&nbsp;don't worry 
too much about the expression quite yet, the parts that starts with e.g. [$][_ip] etc.&nbsp;&nbsp;we will come back to those later.&nbsp;&nbsp;however, 
to use the above keyword, all you have to do is to run code similar to the code below</p>

<pre>
add-two-numbers
  =>5
  =>3
</pre>

<p>when finished executing, there will exist a [result] node on the above code, which will be the result of the 5+3 addition.&nbsp;&nbsp;after execution, 
the execution tree will look like this</p>

<pre>
add-two-numbers
  =>5
  =>3
  result=(dec)>8
</pre>

<p>using constructs like these, you can actually modify the programming language itself, and add keywords that makes sense for your specific domain logic</p>

{{
lambda=>next
  oncreatecontrols
    magix.help.set-next
      next=>system42\admin\help\hyper-lisp\hyper-lisp-execute.mml
}}
