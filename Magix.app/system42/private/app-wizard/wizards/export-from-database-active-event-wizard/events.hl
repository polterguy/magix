

inspect=>@"contains the active events for the export from database event wizard

contains the active events for the web part that allows the user to export from 
the database"


magix.wizard.next-1_onclick

  // validating input first
  magix.forms.get-value
    form-id=>wizard
    id=>active-event-name
  split=>[magix.forms.get-value][value].value
    what=>.
  if=>equals
    lhs=>[split][result].count
    rhs=>1
    or=>equals
      lhs=>[split][result][0].value
      rhs=>magix
    or=>equals
      lhs=>[magix.forms.get-value][value].value
      rhs=>
    code
      magix.viewport.show-message
        message=>you must supply a name for your active event.&nbsp;&nbsp;the name must contain a '.', and cannot start with 'magix.'
        time=>5000
        color=>#ffaaaa
      magix.forms.effect
        type=>focus-and-select
        form-id=>wizard
        id=>active-event-name
      stop

  magix.forms.get-value
    form-id=>wizard
    id=>item-types
  if=>equals
    lhs=>[magix.forms.get-value:1][value].value
    rhs=>
    code
      magix.viewport.show-message
        message=>you need to give me an item type to export
        color=>#ffaaaa
      magix.forms.effect
        type=>focus-and-select
        form-id=>wizard
        id=>item-types
      stop
  set=>[magix.data.count][prototype][type].value
    value=>[magix.forms.get-value:1][value].value
  magix.data.count
  if=>equals
    lhs=>[magix.data.count][count].value
    rhs=>0
    code
      magix.viewport.show-message
        message=>there are no sample records in the database of that type, please supply at least one sample record before continuing
        time=>5000
        color=>#ffaaaa
      magix.forms.effect
        type=>focus-and-select
        form-id=>wizard
        id=>item-types
      stop

  magix.forms.effect
    form-id=>wizard
    id=>inner-wrapper
    type=>slide
    time=>250
    offset=>-1
  magix.wizard.initialize-second-page

magix.wizard.initialize-second-page
  magix.forms.create-web-part
    container=>fields-container
    form-id=>fields-container
    controls
      lambda=>lambda-fields
        oncreatecontrols
          magix.forms.get-value
            form-id=>wizard
            id=>item-types
          set=>[magix.data.load][prototype][type].value
            value=>[magix.forms.get-value][value].value
          magix.data.load
            start=>0
            end=>1
          set=>[magix.data.load][objects][0][value][type]
          for-each=>[magix.data.load][objects][0][value]
            _column-name
            _panel
              panel
                class=>span-5
                controls
                  check-box=>{column-name}
                    class=>span-1
                    checked=>true
                  label
                    tag=>label
                    class=>span-4 last
                    value=>{column-name}
                    for=>{column-name}
            set=>[@][_column-name].value
              value=>[.].name
            iterate=>[@][_panel]
              if=>equals
                lhs=>[.].value
                rhs=>{column-name}
                code
                  set=>[.].value
                    value=>[@][..][..][..][_column-name].value
            add=>[$]
              value=>_tmp
            using=>magix.math
              modulo
                =>[$].count
                =>3
            set=>[$][_tmp]
            if=>equals
              lhs=>[@][using=>magix.math][modulo].value
              rhs=>0
              code
                set=>[@][..][..][_panel][panel][class].value
                  value=>span-5 last
            add=>[$]
              value=>[@][_panel][panel]
          
magix.wizard.save_onclick
  magix.forms.get-children-values
    form-id=>wizard
    id=>fields-container
  _event
    event
      name=>{active-event-name}
      inspect=>@"wizard generated export items active event

active event that exports items of type [{0}] from the database 
to a csv file back to the client"
        =>{type-name}
      code
        _fields
        magix.data.load
          prototype
            type=>{type-name}
        _file-value=>
        for-each=>[magix.data.load][objects]
          _line-value=>
          _obj
          add=>[@][_obj]
            values=>[.][value]
          for-each=>[/][_fields]
            replace=>[@][..][_obj][[.].name].value
              what=>@""""
              with=>@""""""
            if=>not-equals
              lhs=>[@][..][_line-value].value
              rhs=>
              code
                set=>[@][..][..][..][_line-value].value
                  value=>{0},
                    =>[@][..][..][..][_line-value].value
            set=>[@][..][_line-value].value
              value=>@"{0}""{1}"""
                =>[@][..][_line-value].value
                =>[@][..][_obj][[.].name].value
          set=>[@][_line-value].value
            value=>@"{0}
"
              =>[@][_line-value].value
          set=>[@][..][_file-value].value
            value=>{0}{1}
              =>[@][..][_file-value].value
              =>[@][_line-value].value
        magix.date.now
        replace=>[magix.date.now][value].value
          what=>@" "
          with=>-
        replace=>[magix.date.now][value].value
          what=>.
        replace=>[magix.date.now][value].value
          what=>@":"
        set=>[magix.date.now][value].value
          value=>your-files/tmp/export-{0}.csv
            =>[magix.date.now][value].value
        using=>magix.file
          save
            file=>[magix.date.now][value].value
            value=>[_file-value].value
        magix.log.append
          header=>items exported
          body=>items of type '{0}' was exported to file
            =>{type-name}

        // redirecting to file
        set=>[magix.file.download][file].value
          value=>[magix.date.now][value].value
        magix.file.download
  _delete
    magix.data.remove
      prototype
        type=>{type-name}
    magix.log.append
      header=>items deleted
      body=>items of type '{0}' was deleted
        =>{type-name}
  for-each=>[magix.forms.get-children-values][values]
    if=>equals
      lhs=>[.].value
      rhs=>true
      code
        add=>[/][_event][**_fields]
          value=>[.].name
  magix.forms.get-value
    form-id=>wizard
    id=>active-event-name
  magix.forms.get-value
    form-id=>wizard
    id=>item-types
  iterate=>[_event]
    if=>equals
      lhs=>[.].value
      rhs=>{active-event-name}
      code
        set=>[.].value
          value=>[/][magix.forms.get-value:0][value].value
    if=>equals
      lhs=>[.].value
      rhs=>{type-name}
      code
        set=>[.].value
          value=>[/][magix.forms.get-value:1][value].value
  magix.forms.get-value
    form-id=>wizard
    id=>delete-items
  if=>equals
    lhs=>[magix.forms.get-value:2][value].value
    rhs=>true
    code
      iterate=>[_delete]
        if=>equals
          lhs=>[.].value
          rhs=>{type-name}
          code
            set=>[.].value
              value=>[/][magix.forms.get-value:1][value].value
      add=>[_event][event][code]
        values=>[_delete]
  execute=>[_event]
  magix.viewport.show-message
    message=>active event was created
  magix.forms.set-visible
    form-id=>wizard
    id=>edit-event
    value=>true
  using=>magix.forms
    set-info
      form-id=>wizard
      id=>edit-event
      value=>[magix.forms.get-value][value].value

