

<h2 class="span-14 left-5 last">the viewport explained</h2>

<p>a viewport, is just an active module, capable of handling the "magix.viewport.load-module" active event</p>

<p>you can create your own viewports, however, unless you want to completely change the entire rendering of 
your web site, the existing one called "Gutenberg.ascx" should be sufficient for most needs.&nbsp;&nbsp;
if you wish to extend the Gutenberg.ascx viewport, this is easily done through injecting your own css files, 
and then let the rest be done through injecting active modules into it.&nbsp;&nbsp;
Gutenberg.ascx is built upon "grid.css", which is based upon blueprint css framework</p>

<p>a viewport is a "container for your active modules", for instance, the Gutenberg viewport has 11 
of these containers.&nbsp;&nbsp; content1 through content7, trace, menu, footer and header.&nbsp;&nbsp;by modifying the 
css classes as you load these module, you can literally create any type of layout you wish for your application, 
and if that won't suffice, you can create your own viewports, entirely changing every aspect of magix, including completely 
getting rid of the grid.css css system</p>

<p>in addition, you can load up viewports as active modules into viewports, meaning you can cascade viewports 
virtually infinitely if you wish</p>

<p>when you load an active module, you need to decide which "container" in your viewport you 
wish for this module to be loaded into.&nbsp;&nbsp;the container is a mux control of type "DynamicPanel", 
and is basically capable of statefully loading user controls, and other controls, dynamically into themselves, 
and remembering these user controls, such that reloading occurs correctly upon ajax or post requests back 
to the same page</p>

<p>the statefulness of loading of user controls, is what makes magix feel like windows development, 
and why magix takes so much of the pain out from web application development</p>

<p>ps, when i say "user control" above, think active module, embedded as resource into some dll</p>

<p>to change which viewport to use, modify the "magix.core.viewport" setting from web.config.&nbsp;&nbsp;
normally there should be no need to change neither Default.aspx, nor Default.aspx.cs in your web application.&nbsp;&nbsp;
if you wish to fundamentally change how your website is rendered, then this can always be done through creating a new viewport, 
instead of changing the Default.aspx(.cs) files</p>

<p>if you take a look at the Default.aspx(.cs) files, you will in fact see that these files are literally completely 
empty, besides some viewstate logic, and the loading of the viewport</p>


{{
lambda=>next
  oncreatecontrols
    magix.help.set-next
      next=>system42/admin/help/mvc/summing-up.mml
}}

