
<h2>mux CheckBox</h2>

<p>a CheckBox is a 'two state button' which you can turn 'on' and 'off'. useful
for boolean ui situations, where user must choose between two options, for
instance 'yes' or 'no' situations
</p>

<label>methods and properties of control</label>
{{
dynamic=>methods-for-checkbox
  onfirstload
    magix.forms.dox.create-dox-for-web-control
      css=>dox-for-web-control
      control=>checkbox
      container=>methods-for-checkbox
}}

<p>below is an example of an active module, using a mux checkbox instead of conventional web controls. remember to embed 
the active module as an embedded resource if you want to compile this sample</p>

<label>SampleModule.ascx</label>
<pre>
&lt;%@ Assembly 
    Name="Magix.sample" %&gt;
&lt;%@ Control 
    Language="C#" 
    AutoEventWireup="true" 
    Inherits="Magix.sample.SampleModule" %&gt;

&lt;mux:Label
    runat="server"
    id="lbl"
    Tag="label"
    Class="span-5 right-text"
    Value="associated with checkbox"
    For="chk"/&gt;
&lt;mux:CheckBox
    runat="server"
    id="chk"
    Class="span-1"
    OnCheckedChanged="chk_CheckedChanged"/&gt;
</pre>

<label>SampleModule.ascx.cs</label>
<pre>
using System;
using System.Web;
using System.Web.UI;
using Magix.Core;
using Magix.UX.Widgets;

namespace Magix.sample
{
    public class SampleModule : ActiveModule
    {
        protected CheckBox chk;
        protected Label lbl;

        protected void chk_CheckedChanged(object sender, EventArgs e)
        {
            if (chk.Checked)
                lbl.Value = "checkbox is on!";
            else
                lbl.Value = "checkbox is off!";
        }
    }
}</pre>

<label>example of a mux CheckBox</label>
<div class="sample-web-control">
{{
label=>lbl
  value=>associated with checkbox
  tag=>label
  for=>chk
  css=>span-5 right-text
check=>chk
  css=>span-1
  oncheckedchanged
    magix.forms.get-value
      id=>chk
    if=>equals
      lhs=>[magix.forms.get-value][value].Value
      rhs=>true
      code
        magix.forms.set-value
          id=>lbl
          value=>checkbox is on!
    else
      magix.forms.set-value
        id=>lbl
        value=>checkbox is off!
}}
</div>

{{
lambda=>next
  oncreatecontrols
    magix.help.set-next
      next=>system42\admin\help\csharp\ajax\controls\hiddenfield.mml
}}

